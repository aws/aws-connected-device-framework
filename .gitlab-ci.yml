# Official framework image. Look for the different tagged releases at: https://hub.docker.com/r/library/node/tags/

# include:
#   - local: cicd/master-brnach

# variables:
#   !reference [.branch-variables, variables]

variables:
  CONFIG_REPO_PROJECT_ID: 9703
  CONFIG_PACKAGE_NAME: cdf-infrastructure-demo

.common-build-steps: &common-build-steps # install dependencies
  - node common/scripts/install-run-rush.js install --bypass-policy --purge
  # build
  - node common/scripts/install-run-rush.js build

.common-artifacts: &common-artifacts
  artifacts:
    paths:
      - common/
      - infrastructure/**/build.zip
      - packages/**/.rush/
      - packages/**/dist/
      - packages/**/tsconfig.tsbuildinfo
      - packages/**/bundle.zip

stages:
  - build
  - test
  - deployStage

### not working at the moment, therefore using artifacts as a temp workaround
# cache:
#   # enable per-branch caching
#   key: "$CI_COMMIT_REF_SLUG"
#   paths:
#     - *common-artifacts

before_script:
  - env | sort
  # install openssl (required to test some services)
  - yum install -y openssl zip
  # install git (required for `rush change`)
  - yum update -y
  - yum install git -y
  - git version
  - curl -f https://get.pnpm.io/v5.js | node - add --global pnpm@5
  - pnpm version
  - npm install -g @microsoft/rush@5.47.0

downloadConfig:
  stage: build
  before_script:
    - echo 'do nothing on buildLayer'
  image:
    name: public.ecr.aws/amazonlinux/amazonlinux:2
    entrypoint: [""]
  script:
    - 'CONFIG_PACKAGE_VERSION=$(curl --header="JOB-TOKEN: $CI_JOB_TOKEN" ${CI_API_V4_URL}/projects/${CONFIG_REPO_PROJECT_ID}/packages | jq '.[0].id')'
    - 'wget --header="JOB-TOKEN: $CI_JOB_TOKEN" ${CI_API_V4_URL}/projects/${CONFIG_REPO_PROJECT_ID}/packages/generic/${CONFIG_PACKAGE_NAME}/${CONFIG_PACKAGE_VERSION}/config.zip'
    - mkdir -p common/build
    - cp config.zip common/build/config.zip
  artifacts:
    paths:
      - common/build/config.zip

buildLayer:
  stage: build
  before_script:
    - echo 'do nothing on buildLayer'
  image:
    name: public.ecr.aws/amazonlinux/amazonlinux:2
    entrypoint: [""]
  script:
    - mkdir -p common/build
    - yum update -y && yum install -y openssl zip
    - cd common/build && mkdir -p bin lib && cp /bin/openssl bin/ && cp /usr/lib64/libbz2.so.1 lib/ && zip -r build.zip * && rm -rf bin lib
  artifacts:
    paths:
      - common/build/build.zip

.build:
  stage: build
  image: public.ecr.aws/lambda/nodejs:14
  script:
    - *common-build-steps
    # enforce need for changelog
    - node common/scripts/install-run-rush.js change -v
  <<: *common-artifacts

.test:
  stage: test
  image: public.ecr.aws/lambda/nodejs:14
  script:
    - *common-build-steps
    # test
    - node common/scripts/install-run-rush.js test
    # version projects that have changed
    - node common/scripts/install-run-rush.js publish -a
  <<: *common-artifacts

deployStage:
  stage: deployStage
  image: public.ecr.aws/lambda/nodejs:14
  script:
    # install jq
    - curl -s -qL -o /usr/bin/jq https://stedolan.github.io/jq/download/linux64/jq
    - chmod +x /usr/bin/jq
    # Copy the build.zip produced by the buildLayer job
    - cp common/build/build.zip infrastructure/lambdaLayers/openssl/build.zip
    # deploy to staging environment
    - echo Bundling...
    - infrastructure/bundle-core.bash
  <<: *common-artifacts
