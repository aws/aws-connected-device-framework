# Official framework image. Look for the different tagged releases at: https://hub.docker.com/r/library/node/tags/

# include:
#   - local: cicd/master-brnach

# variables:
#   !reference [.branch-variables, variables]

.common-build-steps: &common-build-steps # install dependencies
  - node common/scripts/install-run-rush.js install --bypass-policy --purge
  # build
  - node common/scripts/install-run-rush.js build

.common-artifacts: &common-artifacts
  artifacts:
    paths:
      - common/
      - infrastructure/**/build.zip
      - packages/**/.rush/
      - packages/**/dist/
      - packages/**/tsconfig.tsbuildinfo
      - packages/**/bundle.zip

stages:
  - buildLayer
  # - build
  # - test
  # - deployStage

### not working at the moment, therefore using artifacts as a temp workaround
# cache:
#   # enable per-branch caching
#   key: "$CI_COMMIT_REF_SLUG"
#   paths:
#     - *common-artifacts

# before_script:
#   - env | sort
#   # install openssl (required to test some services)
#   - yum install -y openssl zip
#   # install git (required for `rush change`)
#   - yum update -y
#   - yum install git -y
#   - git version

buildLayer:
  stage: buildLayer
  image:
    name: public.ecr.aws/amazonlinux/amazonlinux:2
    entrypoint: [""]
  script:
    - mkdir -p /tmp/build
    - yum update -y && yum install -y openssl zip
    - cd /tmp/build && mkdir -p bin lib && cp /bin/openssl bin/ && cp /usr/lib64/libbz2.so.1 lib/ && zip -r build.zip * && rm -rf bin lib && pwd
  artifacts:
    paths:
      - /tmp/build/build.zip

.build:
  stage: build
  image: public.ecr.aws/lambda/nodejs:14
  script:
    - *common-build-steps
    # enforce need for changelog
    - node common/scripts/install-run-rush.js change -v
  <<: *common-artifacts

.test:
  stage: test
  image: public.ecr.aws/lambda/nodejs:14
  script:
    - *common-build-steps
    # test
    - node common/scripts/install-run-rush.js test
    # version projects that have changed
    - node common/scripts/install-run-rush.js publish -a
  <<: *common-artifacts

.deployStage:
  stage: deployStage
  image: public.ecr.aws/lambda/nodejs:14
  script:
    # install jq
    - curl -s -qL -o /usr/bin/jq https://stedolan.github.io/jq/download/linux64/jq
    - chmod +x /usr/bin/jq
    # deploy to staging environment
    - echo Bundling...
    - infrastructure/bundle-core.bash
  <<: *common-artifacts
