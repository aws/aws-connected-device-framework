AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: "IoT Device Monitoring"

Parameters:  
  Environment:
    Description:  Name of environment.  Used to name the created resources.
    Type: String
    MinLength: 1
  ApplicationConfigurationOverride:
    Description: This allows you to override any configuration application configuration. Must be a JSON formatted string. Any configurations contained in this will override the configurations found and merged from the config files.
    Type: String
    MinLength: 1

Resources:
  IoTLifecycleConnectRule:
    Type: AWS::IoT::TopicRule
    DependsOn: IoTLifecycleEventLambda
    Properties:
      TopicRulePayload: 
        Actions:
          -
            Lambda:
              FunctionArn: !GetAtt IoTLifecycleEventLambda.Arn
        Description: "Send IoT Lifecycle Event data to Lambda for connection status"
        AwsIotSqlVersion: "2016-03-23"
        RuleDisabled: false
        Sql: >-
          SELECT * FROM '$aws/events/presence/connected/+'

  IoTLifecycleConnectInvocationPermission:
    Type: AWS::Lambda::Permission
    Properties:
      SourceArn: !GetAtt IoTLifecycleConnectRule.Arn
      Action: lambda:InvokeFunction
      Principal: iot.amazonaws.com
      FunctionName: !GetAtt IoTLifecycleEventLambda.Arn
      SourceAccount: !Ref AWS::AccountId

  IoTLifecycleDisconnectRule:
    Type: AWS::IoT::TopicRule
    DependsOn: IoTLifecycleEventLambda
    Properties:
      TopicRulePayload:
        Actions:
          -
            Lambda:
              FunctionArn: !GetAtt IoTLifecycleEventLambda.Arn
        Description: "Send IoT Lifecycle Event data to Lambda for disconnect status"
        AwsIotSqlVersion: "2016-03-23"
        RuleDisabled: false
        Sql: >-
          SELECT * FROM '$aws/events/presence/disconnected/+'
  
  IoTLifecycleInvocationPermission:
    Type: AWS::Lambda::Permission
    Properties:
      SourceArn: !GetAtt IoTLifecycleDisconnectRule.Arn
      Action: lambda:InvokeFunction
      Principal: iot.amazonaws.com
      FunctionName: !GetAtt IoTLifecycleEventLambda.Arn
      SourceAccount: !Ref AWS::AccountId

  IoTLifecycleLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: "/cdf/devicemonitoring/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
  
  IoTLifecycleEventLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../build/build.zip
      Handler: iot_lifecycle_event.lambda_handler
      MemorySize: 512
      Role: !GetAtt IoTLifecycleLambdaRole.Arn
      Runtime: nodejs12.x
      Timeout: 30
      Environment:
        Variables:
          NODE_CONFIG_DIR: './config'
          NODE_CONFIG: !Ref ApplicationConfigurationOverride
      Tracing: Active
    DependsOn:
      - IoTLifecycleLambdaRole