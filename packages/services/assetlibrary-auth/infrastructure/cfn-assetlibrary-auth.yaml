---
AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: API Gateway Lambda Authorizer to support CDF Asset Library fine-grained access control.

Parameters:
 
  KmsKeyId:
    Description: The KMS key ID used to encrypt SSM parameters
    Type: String
    MinLength: 1

Resources:
  CustAuthLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../build/build.zip
      Handler: index.handler

      MemorySize: 256
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: nodejs8.10
      Timeout: 30
      Environment:
        Variables:
          NODE_CONFIG_DIR: './config'
      Tracing: Active

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - !Ref SSMPolicy
        - arn:aws:iam::aws:policy/AWSLambdaExecute
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess   

  SSMPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: "@cdf/assetlibrary-auth policy for accessing SSM and KMS"
      Path: "/"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - 'ssm:GetParameter*'
            Effect: Allow
            Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/cdf-rootca-pem"
          - Action:
              - 'kms:Decrypt'
            Effect: Allow
            Resource: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${KmsKeyId}"
  
  ApiGwAuthInvokeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 
            - lambda.amazonaws.com
            - apigateway.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: apiGwLambdaInvoke
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: lambda:invokeFunction
            Resource: '*'

Outputs:
  CustomAuthLambdaArn:
    Description: Custom Auth Lambda Arn
    Value: !Sub "${CustAuthLambdaFunction.Arn}"
    Export: 
      Name: !Sub "${AWS::StackName}-CustAuthLambdaArn"
